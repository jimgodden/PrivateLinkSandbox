{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.10.61.36676",
      "templateHash": "8841751159427647368"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "iteration": {
      "type": "string"
    },
    "source_vnet_name": {
      "type": "string",
      "defaultValue": "source_vnet"
    },
    "destination_vnet_name": {
      "type": "string",
      "defaultValue": "destination_vnet"
    },
    "bastion_name": {
      "type": "string",
      "defaultValue": "bastion"
    },
    "bastion_vip_name": {
      "type": "string",
      "defaultValue": "bastion_vip"
    },
    "vm_admin_username": {
      "type": "string"
    },
    "vm_admin_password": {
      "type": "secureString"
    },
    "source_vm_name": {
      "type": "string",
      "defaultValue": "[format('sourceVM{0}', parameters('iteration'))]"
    },
    "source_nic_name": {
      "type": "string",
      "defaultValue": "sourceVM_nic"
    },
    "destination_vm_name": {
      "type": "string",
      "defaultValue": "[format('destinationVM{0}', parameters('iteration'))]"
    },
    "destination_nic_name": {
      "type": "string",
      "defaultValue": "destinationVM_nic"
    },
    "publicIpAddress_destination_name": {
      "type": "string",
      "defaultValue": "destinationVM_VIP"
    },
    "privateendpoint_name": {
      "type": "string",
      "defaultValue": "PE"
    },
    "privatelink_name": {
      "type": "string",
      "defaultValue": "PL"
    },
    "slb_name": {
      "type": "string",
      "defaultValue": "slb"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-11-01",
      "name": "[parameters('destination_vm_name')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v3"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter-azure-edition",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[format('{0}_OsDisk_1', parameters('destination_vm_name'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "deleteOption": "Delete",
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('destination_vm_name')]",
          "adminUsername": "[parameters('vm_admin_username')]",
          "adminPassword": "[parameters('vm_admin_password')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "assessmentMode": "ImageDefault",
              "enableHotpatching": false
            },
            "enableVMAgentPlatformUpdates": false
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('destination_nic_name'))]",
              "properties": {
                "deleteOption": "Delete"
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('destination_nic_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-09-01",
      "name": "[parameters('destination_nic_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('destination_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddress_destination_name'))]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('slb_name'), 'bep')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": false,
        "disableTcpStateTracking": false,
        "nicType": "Standard"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('destination_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpAddress_destination_name'))]",
        "[resourceId('Microsoft.Network/loadBalancers', parameters('slb_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-09-01",
      "name": "[parameters('publicIpAddress_destination_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', parameters('source_vm_name'), 'installcustomscriptdst')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "install software for Windows VM"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/jimgodden/PrivateLinkSandbox/main/scripts/destinationInitScript.ps1"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File destinationInitScript.ps1"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('source_vm_name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-11-01",
      "name": "[parameters('source_vm_name')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D2s_v3"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter-azure-edition",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[format('{0}_OsDisk_1', parameters('source_vm_name'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "deleteOption": "Delete",
            "diskSizeGB": 127
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[parameters('source_vm_name')]",
          "adminUsername": "[parameters('vm_admin_username')]",
          "adminPassword": "[parameters('vm_admin_password')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "assessmentMode": "ImageDefault",
              "enableHotpatching": false
            },
            "enableVMAgentPlatformUpdates": false
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('source_nic_name'))]",
              "properties": {
                "deleteOption": "Delete"
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('source_nic_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-09-01",
      "name": "[parameters('source_nic_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('source_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableAcceleratedNetworking": true,
        "enableIPForwarding": false,
        "disableTcpStateTracking": false,
        "nicType": "Standard"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('source_vnet_name'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', parameters('source_vm_name'), 'installcustomscriptsrc')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "install software for Windows VM"
      },
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/jimgodden/PrivateLinkSandbox/main/scripts/sourceInitScript.ps1"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File sourceInitScript.ps1"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('source_vm_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/bastionHosts",
      "apiVersion": "2022-09-01",
      "name": "[parameters('bastion_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "dnsName": "[format('bst-cb7c59cb-848e-4179-9c97-f32c2325ccac.{0}.azure.com', parameters('bastion_name'))]",
        "scaleUnits": 2,
        "enableTunneling": false,
        "enableIpConnect": false,
        "disableCopyPaste": false,
        "enableShareableLink": false,
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('bastion_vip_name'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('source_vnet_name'), 'AzureBastionSubnet')]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('bastion_vip_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('source_vnet_name'), 'AzureBastionSubnet')]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-09-01",
      "name": "[parameters('bastion_vip_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2022-09-01",
      "name": "[parameters('slb_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "fip",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('destination_vnet_name'), 'default')]"
              },
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "bep"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "forwardAll",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', parameters('slb_name'), 'fip')]"
              },
              "frontendPort": 0,
              "backendPort": 0,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "All",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "disableOutboundSnat": true,
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('slb_name'), 'bep')]"
              },
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('slb_name'), 'probe10001')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "probe10001",
            "properties": {
              "protocol": "Tcp",
              "port": 10001,
              "intervalInSeconds": 5,
              "numberOfProbes": 1,
              "probeThreshold": 1
            }
          }
        ],
        "inboundNatRules": [],
        "outboundRules": [],
        "inboundNatPools": []
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('destination_vnet_name'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2022-09-01",
      "name": "[parameters('privateendpoint_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[parameters('privateendpoint_name')]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Network/privateLinkServices', parameters('privatelink_name'))]"
            }
          }
        ],
        "manualPrivateLinkServiceConnections": [],
        "customNetworkInterfaceName": "[format('{0}-nic', parameters('privateendpoint_name'))]",
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('source_vnet_name'), 'peSubnet')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateLinkServices', parameters('privatelink_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('source_vnet_name'), 'peSubnet')]"
      ]
    },
    {
      "type": "Microsoft.Network/privateLinkServices",
      "apiVersion": "2022-09-01",
      "name": "[parameters('privatelink_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "enableProxyProtocol": false,
        "loadBalancerFrontendIpConfigurations": [
          {
            "id": "[format('{0}/frontendIPConfigurations/fip', resourceId('Microsoft.Network/loadBalancers', parameters('slb_name')))]"
          }
        ],
        "ipConfigurations": [
          {
            "name": "default-1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('destination_vnet_name'), 'default')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('destination_vnet_name'), 'default')]",
        "[resourceId('Microsoft.Network/loadBalancers', parameters('slb_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-09-01",
      "name": "[parameters('source_vnet_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        },
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('source_vnet_name'), 'default')]",
      "properties": {
        "addressPrefix": "10.1.0.0/24",
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('source_vnet_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('source_vnet_name'), 'AzureBastionSubnet')]",
      "properties": {
        "addressPrefix": "10.1.1.0/24",
        "serviceEndpoints": [],
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('source_vnet_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('source_vnet_name'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('source_vnet_name'), 'peSubnet')]",
      "properties": {
        "addressPrefix": "10.1.2.0/24",
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('source_vnet_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('source_vnet_name'), 'AzureBastionSubnet')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('source_vnet_name'), 'todst')]",
      "properties": {
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('destination_vnet_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/bastionHosts', parameters('bastion_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('destination_vnet_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('source_vnet_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-09-01",
      "name": "[parameters('destination_vnet_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.2.0.0/16"
          ]
        },
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('destination_vnet_name'), 'default')]",
      "properties": {
        "addressPrefix": "10.2.0.0/24",
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Disabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('destination_vnet_name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('destination_vnet_name'), 'tosrc')]",
      "properties": {
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('source_vnet_name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/bastionHosts', parameters('bastion_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('destination_vnet_name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('source_vnet_name'))]"
      ]
    }
  ]
}